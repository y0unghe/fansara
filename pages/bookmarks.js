import { collection, documentId, FieldPath, getDocs, onSnapshot, orderBy, query, where } from 'firebase/firestore'
import React, { useEffect, useState } from 'react'
import { db } from '../firebase'
import Post from "../components/Post";
import { getSession, useSession } from "next-auth/react";
import Sidebar from '../components/Sidebar';
import Head from 'next/head';

function Bookmark() {
    const [posts, setPosts] = useState([]);
    const { data: session } = useSession();

    useEffect(
        () =>
            onSnapshot(
                query(collection(db, "users", session.user.uid, 'bookmarks'), orderBy("timestamp", "desc")),
                async (snapshot) => {
                    const ids = snapshot.docs.map(doc => {
                        const data = doc.data();
                        const postId = data.postId;
                        return postId;
                    });
                    const q = query(collection(db, "posts"), where(documentId(), "in", ids))
                    const querySnapshot = await getDocs(q);
                    const posts = querySnapshot.docs.map(doc => doc.data());
                    setPosts(posts);
                }), [db]
    );

    return (
        <div>
            <Head>
                <title>Fansara</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className='min-h-screen flex max-w-[1500px] mx-auto'>
                <Sidebar />
                <div className=' ml-[340px] flex-grow border-l border-r border-gray-200 border-1'>
                    <div className='bg-white top-0 z-50 text-black font-bold p-4 border-b border-1 border-gray-200 sticky'>
                        Bookmarks
                    </div>
                    <div className='pb-72'>
                        {
                            posts.map((post) => (
                                <Post isPostPage={false} key={post.id} id={post.id} post={post} />
                            ))
                        }
                    </div>
                </div>
            </main>
        </div>
    )
}

export default Bookmark

export async function getServerSideProps(context) {
    const session = await getSession(context);

    return {
        props: {
            session
        }
    }
}