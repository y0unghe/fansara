import { useRouter } from 'next/router'
import React, { useEffect, useState } from 'react'
import { ArrowLeftIcon, ChevronRightIcon } from "@heroicons/react/24/outline"
import Sidebar from '../../components/Sidebar'
import { getSession, useSession } from "next-auth/react";
import Head from 'next/head'
import { updateDoc, doc, onSnapshot, setDoc, getDoc } from 'firebase/firestore';
import { db } from '../../firebase'

function Profile() {
    const router = useRouter();
    const { data: session } = useSession();
    const [user, setUser] = useState(null);

    const getUser = async () => {
        const docRef = doc(db, "users", session.user.uid);
        const snapshot = await getDoc(docRef);
        setUser(snapshot.data());
    }

    useEffect(
        () => {
            getUser();
        },
        [db, session]
    );

    const save = async () => {
        console.log(user);

        const docRef = doc(db, "users", session.user.uid);

        await setDoc(docRef, {
            "bio": user.bio,
            "username": user.username
        }, {
            merge: true
        });

        router.push("/");
    }

    return (
        <div>
            <Head>
                <title>Edit profile - Fansara</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {
                user && (
                    <main className='min-h-screen flex max-w-[1500px] mx-auto'>
                        <Sidebar />

                        <div className='ml-[340px] w-[350px] border-l border-r border-gray-200 border-1'>
                            <div className='top-0 z-50 bg-white text-black font-bold p-4 border-b border-1 border-gray-200 sticky'>
                                <div
                                    className=" hover:text-blue-500 px-0 cursor-pointer"
                                    onClick={() => router.push("/")}
                                >
                                    <div className='flex space-x-2 items-center'>
                                        <ArrowLeftIcon className='w-5 h-5' />
                                        <h1 className='font-bold text-lg'>Settings</h1>
                                    </div>
                                </div>
                            </div>
                            <div className='flex flex-col divide-y-2 divide-gray-200'>
                                <div
                                    onClick={() => router.push("/settings/profile")}
                                    className='px-5 py-2 flex justify-between items-center hover:bg-blue-100 cursor-pointer'>
                                    <h1>Profile</h1>
                                    <ChevronRightIcon className='text-gray-500 w-5' />
                                </div>
                                <div className='px-5 py-2 flex justify-between items-center hover:bg-blue-100 cursor-pointer'>
                                    <h1>Account</h1>
                                    <ChevronRightIcon className='text-gray-500 w-5' />
                                </div>
                            </div>
                        </div>
                        <div className='flex-grow'>
                            <div className='top-0 z-50 bg-white text-black font-bold p-4 border-b border-1 border-gray-200 sticky'>
                                <div className='flex justify-between'>
                                    <div className='flex space-x-2 items-center'>
                                        <h1 className='font-bold text-lg'>Edit Profile</h1>
                                    </div>
                                    <button
                                        onClick={save}
                                        className='px-5 py-2 text-white bg-blue-500 rounded-full hover:bg-blue-600 text-sm'>
                                        Save
                                    </button>
                                </div>
                            </div>
                            <div className='p-5 border-b-2 border-gray-100 flex flex-col space-y-5'>
                                <div>
                                    <label for="username" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Username</label>
                                    <div class="flex">
                                        <span class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-50 rounded-l-md border border-r-0 border-gray-300 dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600">
                                            @
                                        </span>
                                        <input
                                            contentEditable={false}
                                            disabled={true}
                                            value={user.tag}
                                            type="text"
                                            id="username"
                                            class="rounded-none rounded-r-lg border text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Username" />
                                    </div>
                                </div>
                                <div>
                                    <label className="block text-gray-400 text-sm mb-2" htmlFor="email">
                                        Display Name
                                    </label>
                                    <input
                                        onChange={(e) => {
                                            const updated = { ...user };
                                            updated.username = e.target.value;
                                            setUser(updated);
                                        }}
                                        value={user.username}
                                        className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                        id="name"
                                        type="text"
                                        placeholder="Name" />
                                </div>
                                <div>
                                    <label className="block text-gray-400 text-sm mb-2" htmlFor="email">
                                        Bio
                                    </label>
                                    <textarea
                                        onChange={(e) => {
                                            const updated = { ...user };
                                            updated.bio = e.target.value;
                                            setUser(updated);
                                        }}
                                        value={user.bio}
                                        className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                        id="bio"
                                        type="text"
                                        placeholder="Bio" />
                                </div>
                            </div>
                            <div className='flex flex-col border-b-2 border-b-gray-100 pt-5'>
                                <h1 className='font-bold px-5 pb-5'>Subscription</h1>
                                <div className='h-[1px] bg-gray-100'></div>
                                <div
                                    onClick={() => router.push('/settings/subscription')}
                                    className='flex py-3 px-5 justify-between items-center hover:bg-blue-100 cursor-pointer'>
                                    <h1>Subscription price and bundles</h1>
                                    <ChevronRightIcon className='text-gray-500 w-5' />
                                </div>
                            </div>
                        </div>
                    </main>
                )
            }

        </div>
    )
}

export default Profile

export async function getServerSideProps(context) {
    const session = await getSession(context);

    return {
        props: {
            session,
        },
    };
}